import ctypes

def get_terminal_width():
    """获取终端窗口的宽度"""
    kernel32 = ctypes.windll.kernel32
    handle = kernel32.GetStdHandle(-12)  # STD_ERROR_HANDLE
    csbi = ctypes.create_string_buffer(22)
    if kernel32.GetConsoleScreenBufferInfo(handle, csbi):
        import struct
        (bufx, bufy, curx, cury, wattr,
         left, top, right, bottom, maxx, maxy) = struct.unpack("hhhhHhhhhhh", csbi.raw)
        return right - left + 1
    return 80  # 默认宽度

def print_at_last_line(text):
    """在终端最后一行显示文字"""
    width = get_terminal_width()
    kernel32 = ctypes.windll.kernel32
    handle = kernel32.GetStdHandle(-12)  # STD_ERROR_HANDLE
    csbi = ctypes.create_string_buffer(22)
    if kernel32.GetConsoleScreenBufferInfo(handle, csbi):
        import struct
        (bufx, bufy, curx, cury, wattr,
         left, top, right, bottom, maxx, maxy) = struct.unpack("hhhhHhhhhhh", csbi.raw)
        # 使用公开的 COORD 类
        new_pos = ctypes.wintypes.COORD(0, bottom)
        kernel32.SetConsoleCursorPosition(handle, new_pos)
        print(text.ljust(width)[:width])  # 确保文字占满一行

if __name__ == '__main__':
    text = "这是最后一行显示的文字"
    print_at_last_line(text)